객체(Object)
새창으로 열기
지금까지 살펴본 배열은 아이템에 대한 식별자로 숫자를 사용했다. 데이터가 추가되면 배열 전체에서 중복되지 않는 인덱스가 자동으로 만들어져서 추가된 데이터에 대한 식별자가 된다. 이 인덱스를 이용해서 데이터를 가져오게 되는 것이다. 만약 인덱스로 문자를 사용하고 싶다면 객체(dictionary)를 사용해야 한다. 다른 언어에서는 연관배열(associative array) 또는 맵( map), 딕셔너리(Dictionary)라는 데이터 타입이 객체에 해당한다.

객체의 생성
다음은 객체를 만드는 법이다.

1
var grades = {'egoing': 10, 'k8805': 6, 'sorialgi': 80};
위의 예제에서 egoing은 key가 되고, 10은 value가 된다. 아래는 객체를 만드는 다른 방법이다.

1
2
3
4
var grades = {};
grades['egoing'] = 10;
grades['k8805'] = 6;
grades['sorialgi'] = 80;
아래와 같은 방법으로 객체를 만들수도 있다.

1
2
3
4
var grades = new Object();
grades['egoing'] = 10;
grades['k8805'] = 6;
grades['sorialgi'] = 80;
객체를 만들었으니 이제는 객체에서 필요한 값을 가져와보자. 다음은 sorialgi라는 이름(key)으로 저장된 값을 가져오는 법이다. 결과는 80이다.

1
2
var grades = {'egoing': 10, 'k8805': 6, 'sorialgi': 80};
alert(grades['sorialgi']);
다음 방법으로도 객체의 속성에 접근 할 수 있다.

1
alert(grades.sorialgi);
다음은 객체에 저장된 데이터를 기준으로 반복작업을 하는 방법이다.



객체는 배열과 비슷

객체는 인덱스를 우리가 원하는 문자로 지정 가능 
