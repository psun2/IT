//- 피보나치 수열을 반복 함수로 구현할 수 있습니다.

//피보나치 수열 이란?
//		저는 수학과 영어를 제일 싫어 합니다. 그래서 약수, 공약수, 최대공약수, 최소공약수, 팩토리얼 등등.. 아무것도 몰라서
//		꼭 이렇게 저만의 공부법처럼 하나하나 알아갈때마다 조사해서 적어놓는 습관을 가지고 있습니다.
//		피보나치 수열을 구글, 네이버 등 포털사이트의 백과사전을 참고해보면.....음.... 모르겠습니다.
//		다만, 이미지등 여러 사람들의 글을 보고 피보나치 수열의 생김새를 보고 알 수 있엇습니다.
		
//피보나치 수열 의 구조
//1 + 1 + (1 + 1 = 2) + (1 + 2 = 3) + (2 + 3 = 5) + (3 + 5 = 8) + (5 + 8 = 13).......
//a + b + (a + b = c) + (b + c = d) + (c + d = e)....... 
//즉, a 와 b 를 더해 새로운 c 를 만들고, b 와 c 를 더해 새로운 d 를 만들고 한칸씩 밀려 나면서 새롭게 만들어 진것과 더해 줍니다.
//처음보면 이해도 안가고 어렵고 복잡한 구조 입니다. 
//결국은 아래와 같은 수열이 됩니다.
//1 + 1 + 2 + 3 + 5 + 8 + 13 ....
//1, 1, 2, 3, 5, 8, 13......

//반복 함수란?
//		사실 이 과목을 공부하기 전에 반복함수라는 뭔가 내장되어 있는 함수 인지 알았습니다.
//		아직 짧은 지식이지만, 반복 함수를 보니, 한마디로 아 ~ 그냥 함수 안에서 반복문을 사용했구나,
//		아마 조건문도 같이 껴잇으니, 조건반복 함수(?) 라고 부르지 않을까? 그냥 농담삼아 하고싶은말은
//		단어적, 명칭적 그런 것들이 생소하고 어려워도 그냥 부르는 이름만 길고 어렵다. 라고 생각하고 싶습니다.

import java.util.Scanner;

public class 피보나치수열_feat_반복함수_scanner {

	public static int fibonacci(int number) {
		int one = 1; // 피보나치 수열의 특성상 : 0번 인덱스의 값은 1 고정
		int two = 1; // 피보나치 수열의 특성상 : 1번 인덱스의 값은 1 고정
		int result = 0;
		if(number == 1) { // 피보나치 수열의 특성상 : 0번 인덱스의 값은 1 고정
			return one; // 피보나치 수열의 특성상 : 0번 인덱스의 값은 1 고정
		} else if(number == 2) { // 피보나치 수열의 특성상 : 1번 인덱스의 값은 1 고정
			return two; // 피보나치 수열의 특성상 : 1번 인덱스의 값은 1 고정
		} else {
			for(int i = 2; i < number; i++) { //위의 피보나치 특성으로 i는 2부터 시작합니다.
				result = one + two;
				one = two;
				two = result;
			}
			return result;
		}
	}
	
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		
		System.out.println("피보나치 수열의 X번째 index에 값을 반복함수로 구하는 프로그램입니다.");
		System.out.println();
		
		System.out.print("궁금하신 피보나치 수열값 의 index번호를 입력해 주세요 : ");
		int number = sc.nextInt();
		sc.close();
		
		System.out.println();
		System.out.println("피보나지 수열의 " + number + " 번째의 인덱스의 값은 " + fibonacci(number) + " 입니다.");

		//TODO 피보나치 함수에 100을 인자로 주면 음의 정수가 나온다. 
		//TODO int 의 최대값은 2147483647 이므로, 2,147,483,647 넘어가면
		//TODO 오버플로 현상으로 제일 작은 값인 -2,147,483,648 로 돌아가서 계산되는 현상이 일어 납니다.
	}

}
